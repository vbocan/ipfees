@page
@model SplitScreenModel
@{
    ViewData["Title"] = "Split Screen";
    Layout = "_LayoutWide";
}
<div class="container-fluid">

    <div class="text-center">
        <h1 class="display-4">Welcome to IPFees</h1>
        <p>Modern intellectual property fees calculation</p>
    </div>

    <div class="row">
        <div class="col-3">
            <h1>1. Code</h1>
            <form asp-page-handler="ExecuteCode" method="post">
                <div class="mb-3">
                    <label for="@Model.ReferencedModules" class="form-label">Referenced Modules</label>
                    @for (var i = 0; i < Model.ReferencedModules.Count(); i++)
                    {
                        <div class="form-check form-switch">
                            <label class="form-check-label" for="@Model.ReferencedModules[i].Name">@Model.ReferencedModules[i].Description</label>
                            <input class="form-check-input" type="checkbox" asp-for="@Model.ReferencedModules[i].Checked">
                            <input type="hidden" asp-for="@Model.ReferencedModules[i].Checked" value="false">
                            <input type="hidden" asp-for="@Model.ReferencedModules[i].Name">
                        </div>
                    }
                    <div id="ReferencedModulesHelp" class="form-text">Source code associated to referenced modules is parsed along with the jurisdiction source code.</div>
                </div>
                <div class="my-3">
                    <textarea asp-for="Code" class="form-control" rows="20"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Execute Code</button>
            </form>

            @if (Model.ParseErrors != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Errors</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var e in Model.ParseErrors)
                        {
                            <tr>
                                <td>@e</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>

        <div class="col-3">
            <h1>2. Data Collection</h1>
            <form asp-page-handler="Result" method="post">
                @if (Model.Vars != null)
                {
                    foreach (var v in Model.Vars)
                    {
                        switch (v)
                        {
                            case DslVariableList:
                                var v1 = (DslVariableList)v;
                                <label class="form-label" for="@v1.Name">@v1.Text</label>
                                <select class="form-select form-select-lg mb-3" name="@v1.Name" id="@v1.Name">
                                    @foreach (var item in v1.Items)
                                    {
                                        if (v1.DefaultSymbol.Equals(item.Symbol))
                                        {
                                            <option selected value="@item.Symbol">@item.Value</option>
                                        }
                                        else
                                        {
                                            <option value="@item.Symbol">@item.Value</option>
                                        }
                                    }
                                </select>
                                break;
                            case DslVariableNumber:
                                var v2 = (DslVariableNumber)v;
                                <div class="mb-3 col-md-6">
                                    <label class="form-label" for="@v2.Name">@v2.Text</label>
                                    <input class="form-control" type="number" id="@v2.Name" name="@v2.Name" value="@v2.DefaultValue" min="@v2.MinValue" max="@v2.MaxValue">
                                </div>
                                break;
                            case DslVariableBoolean:
                                var v3 = (DslVariableBoolean)v;
                                <div class="mb-3 form-check">
                                    <label class="form-check-label" for="@v3.Name">@v3.Text</label>
                                    @if (v3.DefaultValue)
                                    {
                                        <input class="form-check-input" type="checkbox" id="@v3.Name" name="@v3.Name" value="true" checked>
                                        <input type="hidden" name="@v3.Name" value="false">
                                    }
                                    else
                                    {
                                        <input class="form-check-input" type="checkbox" id="@v3.Name" name="@v3.Name" value="true">
                                        <input type="hidden" name="@v3.Name" value="false">
                                    }
                                </div>
                                break;
                        }
                    }
                }
                @if (!Model.ExecutionPending)
                {
                    <button type="submit" class="btn btn-primary">Compute Result</button>
                } else
                {
                    <div class="col-md-6">
                        <p class="text-muted">Click [Execute Code] on the left.</p>
                    </div>
                }
            </form>
        </div>

        <div class="col-6">
            <h1>3. Results</h1>
            @if (Model.CalculationPending)
            {
                <div class="col-md-6">
                    <p class="text-muted">Pending...</p>
                </div>
            }
            else
            {                
                <div class="col-md-12">
                    <h4>Total: @((Model.TotalMandatoryAmount + Model.TotalOptionalAmount).ToString("0.00"))</h4>
                    <h6>Mandatory Fees: @Model.TotalMandatoryAmount.ToString("0.00") | Optional Fees: @Model.TotalOptionalAmount.ToString("0.00")</h6>
                </div>

                @if (!string.IsNullOrEmpty(Model.ComputationError))
                {
                    <div class="alert alert-danger" role="alert">
                        @Model.ComputationError
                    </div>
                }

                @if (Model.CollectedValues != null)
                {
                    var i = 1;
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th rowspan="2">Collected Values</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var cv in Model.CollectedValues)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@cv.ToString()</td>
                                </tr>
                                i++;
                            }
                        </tbody>
                    </table>
                }

                @if (Model.CalculationSteps != null)
                {
                    var i = 1;
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th rowspan="2">Calculation Steps</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var e in Model.CalculationSteps)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@e</td>
                                </tr>
                                i++;
                            }
                        </tbody>
                    </table>
                }
            }
        </div>
    </div>

</div>