@page
@model ReferenceModel
@{
    ViewData["Title"] = "IPFLang Reference";
}
<h1>IPFLang</h1>
<h2>A Domain-Specific Language for Modern IP Fees Calculation</h2>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Overview</h5>
        <h6 class="card-subtitle mb-2 text-muted">
            Inputs and Fees
        </h6>
        <p class="card-text">
            The process of describing IP fees in IPFLang consists of determining what the inputs are and how the fee is composed off small amounts that accrue based on rules.<br/>
            There are five types of inputs available:
        </p>
        <ul>
            <li>String list with individual choices</li>
            <li>String list with multiple choices</li>
            <li>Number (floating point), with lower and upper bounds as well as a default value</li>
            <li>Boolean (for yes/no types of responses)</li>
            <li>Date (for selecting the number of yers/months/days to a specific date)</li>
        </ul>
        <p>
            Inputs are presented as HTML controls that the user fill in and upon form submission, the values are used to compute the fee. The system displays the full list of steps taken to reach the result, to aid debugging.
        </p>
    </div>
</div>


<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Single-Selection Input</h5>
        <h6 class="card-subtitle mb-2 text-muted">Single-selection input displays a list of string choices and allows the user to select one of those. A default choice must be specified. The group to which the input belongs can be specified (optional).</h6>
        <p class="card-text">
            DEFINE LIST EntityType AS 'Select the desired entity type'<br />
            GROUP G1 <em>(optional)</em><br/>
            CHOICE NormalEntity AS 'Normal'<br />
            CHOICE SmallEntity AS 'Small'<br />
            CHOICE MicroEntity AS 'Micro'<br />
            DEFAULT NormalEntity<br />
            ENDDEFINE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Multiple-Selection Input</h5>
        <h6 class="card-subtitle mb-2 text-muted">Multiple-selection input displays a list of string choices and allows the user to select one or more of those. One or more default choices must be specified (separated by comma). The group to which the input belongs can be specified (optional).</h6>
        <p class="card-text">
            DEFINE MULTILIST EntityType AS 'Select the desired entity type'<br />
            GROUP G2 <em>(optional)</em><br />
            CHOICE NormalEntity AS 'Normal'<br />
            CHOICE SmallEntity AS 'Small'<br />
            CHOICE MicroEntity AS 'Micro'<br />
            DEFAULT SmallEntity,NormalEntity<br />
            ENDDEFINE
        </p>
        <p>To get the number of selected choices, use the !COUNT property, e.g. EntityType!COUNT.</p>
        <p>To test user selection, use the IN (regular inclusion test) and NIN (not-in) operators, e.g. YIELD 100 IF MicroEntity IN EntityType or YEILD 200 IF SmallEntity NIN EntityType.</p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Number Input</h5>
        <h6 class="card-subtitle mb-2 text-muted">Number inputs allow entering a numeric value (floating point), bounded by lower and upper limits. A default value must be specified. The group to which the input belongs can be specified (optional).</h6>
        <p class="card-text">
            DEFINE NUMBER SheetCount AS 'Enter the number of sheets'<br />
            GROUP G3 <em>(optional)</em><br />
            BETWEEN 10 AND 1000<br />
            DEFAULT 15<br />
            ENDDEFINE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Boolean Input</h5>
        <h6 class="card-subtitle mb-2 text-muted">Boolean inputs allow selecting a condition. The default selection can be specified. The group to which the input belongs can be specified (optional).</h6>
        <p class="card-text">
            DEFINE BOOLEAN ContainsDependentClaims AS 'Does this contain dependent claims?'<br />
            GROUP G4 <em>(optional)</em><br />
            DEFAULT TRUE<br />
            ENDDEFINE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Date Input</h5>
        <h6 class="card-subtitle mb-2 text-muted">Date inputs allow entering a date bounded by lower and upper limits. A default date must be specified. The group to which the input belongs can be specified (optional).</h6>
        <p class="card-test">
            The special value TODAY is replaced at runtime with the actual value. The date format is DD.MM.YYYY.
        </p>
        <p class="card-text">
            DEFINE DATE ApplicationDate AS 'Application date'<br/>
            GROUP G5 <em>(optional)</em><br />
            BETWEEN 01.01.2023 AND TODAY<br />
            DEFAULT 01.03.2023<br />
            ENDDEFINE
        </p>
        <p>The date type cannot currently be used as such, but it employs several properties, as follows:</p>
        <ul>
            <li>!YEARSTONOW - gets the number of years from a specific date in the past until now (a floating-point number).</li>
            <li>!MONTHSTONOW - gets the number of months from a specific date in the past until now (a floating-point number).</li>
            <li>!MONTHSTONOW_FROMLASTDAY - gets the number of months from the last day of the month of a specific date in the past until now (a floating-point number). For instance, if the supplied date is 01.01.2023, the last day of the month is 31.01.2023 and that will be used to compute the number of months until now.</li>
            <li>!DAYSTONOW - gets the number of days from a specific date in the past until now (a floating-point number).</li>
        </ul>
        </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Input Grouping</h5>
        <h6 class="card-subtitle mb-2 text-muted">Groups assigned to inputs can be assigned individual texts and weights. Upon display on the user interface, all inputs will be grouped by their group and ordered by weight (the heavier an input is, the lower it appears in the list).<br/>Grouping definition is usually declared in an autorun module which gets executed automatically, even if it is not referenced by a fee definition.</h6>
        <p class="card-text">
            DEFINE GROUP G1 AS 'Application date inputs' WITH WEIGHT 100<br />
            DEFINE GROUP G2 AS 'Translation related inputs' WITH WEIGHT 150<br />
            DEFINE GROUP G3 AS 'Claim related inputs' WITH WEIGHT 200
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Fee Definition</h5>
        <h6 class="card-subtitle mb-2 text-muted">Any number of fees can be created and they all account towards the grand total. In it's simplest form, a fee yields a singe value with no condition.</h6>
        <p class="card-text">
            COMPUTE FEE SimplestFee<br />
            YIELD 150<br/>
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Optional Fees</h5>
        <h6 class="card-subtitle mb-2 text-muted">Fees can be declared as optional. Option fees still account towards the grand total, but they are marked as such in the final result.</h6>
        <p class="card-text">
            COMPUTE FEE SimplestOptionalFee OPTIONAL<br />
            YIELD 150<br/>
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Conditional Fees</h5>
        <h6 class="card-subtitle mb-2 text-muted">Conditions can be added to each YIELD branch. In this case, BasicNationalFee gets calculated according to the user selection in the EntityType input.</h6>
        <p>The following operators are currently supported: EQ, NEQ, LT, LTE, GT, GTE.</p>
        <p class="card-text">
            COMPUTE FEE BasicNationalFee<br />
            YIELD 320 IF EntityType EQ NormalEntity<br />
            YIELD 128 IF EntityType EQ SmallEntity<br />
            YIELD 64 IF EntityType EQ MicroEntity<br />
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Conditional Fees (More Complex)</h5>
        <h6 class="card-subtitle mb-2 text-muted">For more complex scenarios, the CASE clause can be used. In this particular care, certain amounts are added function of the SituationType input. YIELD statements outside the CASE are evaluated normally.</h6>
        <p class="card-text">
            COMPUTE FEE ExaminationFee<br />
            CASE SituationType EQ PreparedIPEA AS<br />
            YIELD 20 IF EntityType EQ NormalEntity<br />
            YIELD 40 IF EntityType EQ SmallEntity<br />
            YIELD 60 IF EntityType EQ MicroEntity<br />
            ENDCASE<br />
            YIELD 800 IF EntityType EQ NormalEntity<br />
            YIELD 360 IF EntityType EQ SmallEntity<br />
            YIELD 160 IF EntityType EQ MicroEntity<br />
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Complex Amounts</h5>
        <h6 class="card-subtitle mb-2 text-muted">The YIELDed amount can be computed using a complex formula. If rounding is needed, one of the usual rounding functions can be used (see below).</h6>
        <p class="card-text">
            COMPUTE FEE SheetFee<br />
            YIELD 420*((SheetCount-100)/50) IF SheetCount GT 100 AND EntityType EQ NormalEntity<br />
            YIELD 168*((SheetCount-100)/50) IF SheetCount GT 100 AND EntityType EQ SmallEntity<br />
            YIELD 84*((SheetCount-100)/50) IF SheetCount GT 100 AND EntityType EQ MicroEntity<br />
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Number Rounding Functions</h5>
        <h6 class="card-subtitle mb-2 text-muted">Rounding is accomplished using FLOOR, ROUND, CEIL functions.</h6>
        <p class="card-text">
            <ul>
                <li>FLOOR - strips off the decimal part, e.g. 4.7 -> 4</li>
                <li>ROUND - rounds to the nearest integer, e.g. 4.7 -> 5 and 4.3 -> 4</li>
                <li>CEIL - rounds to the largest integer, e.g. 4.3 -> 5</li>
            </ul>
            COMPUTE FEE SheetFee<br />
            YIELD ROUND(420*((SheetCount-100)/50)) IF SheetCount GT 100 AND EntityType EQ NormalEntity<br />
            YIELD FLOOR(168*((SheetCount-100)/50)) IF SheetCount GT 100 AND EntityType EQ SmallEntity<br />
            YIELD CEIL(84*((SheetCount-100)/50)) IF SheetCount GT 100 AND EntityType EQ MicroEntity<br />
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Choice Selection Test</h5>
        <h6 class="card-subtitle mb-2 text-muted">To test for user selection, use the IN and NIN operators.</h6>
        <p class="card-text">
            COMPUTE FEE SheetFee<br />
            YIELD 100 IF Country1 IN Countries<br />
            YIELD 200 IF Country2 IN Countries<br />
            YIELD 25 IF Country1 NIN Countries AND Country2 NIN Countries<br/>
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Date Selection Test</h5>
        <h6 class="card-subtitle mb-2 text-muted">Dates cannot currently be used as such, but rather via properties that compute the number of years/months/days to the current date. The properties are !YEARSTONOW, !MONTHSTONOW, and !DAYSTONOW.</h6>
        <p class="card-text">
            DEFINE DATE D1 AS 'My birthday'<br/>
            BETWEEN 01.01.1975 AND 31.12.1990<br />
            DEFAULT 31.10.1975<br />
            ENDDEFINE<br />
            <br />
            COMPUTE FEE Fee1<br />
            YIELD 10 * ROUND(D1!YEARSTONOW) IF D1!YEARSTONOW GT 40<br />
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Fee Local Variables</h5>
        <h6 class="card-subtitle mb-2 text-muted">Local variables can be defined inside the scope of a fee. This is to enhance readability and simplify fee computation.</h6>
        <p class="card-text">
            COMPUTE FEE SheetFee<br />
            LET A AS 20<br/>
            LET B AS 40<br/>
            YIELD A*200+B<br />
            ENDCOMPUTE
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Returns</h5>
        <h6 class="card-subtitle mb-2 text-muted">The fee computation engine conveys information back to the caller using the RETURN statements.</h6>
        <p class="card-text">
            RETURN ClaimLimits AS '10 claims included; additional fee as of 11'<br/>
            RETURN ExReqDate AS 'Examination request due within 7 years after filing'
        </p>
    </div>
</div>

<div class="card mb-3" style="width: 48rem;">
    <div class="card-body">
        <h5 class="card-title">Example</h5>
        <h6 class="card-subtitle mb-2 text-muted">Use this as a starting point to your own fee computation.</h6>
        <p class="card-text">
            DEFINE LIST EntityType AS 'Select the desired entity type'<br />
            CHOICE NormalEntity AS 'Normal'<br />
            CHOICE SmallEntity AS 'Small'<br />
            CHOICE MicroEntity AS 'Micro'<br />
            DEFAULT NormalEntity<br />
            ENDDEFINE<br />
            <br />
            DEFINE LIST SituationType AS 'Situation type'<br />
            CHOICE PreparedIPEA AS 'IRRP (Chapter II) prepared by the IPEA/US'<br />
            CHOICE PaidAsISA AS 'International search fee paid as ISA'<br />
            CHOICE PreparedISA AS 'Search report prepared by an ISA other than the US'<br />
            CHOICE AllOtherSituations AS 'All other situations'<br />
            DEFAULT PreparedIPEA<br />
            ENDDEFINE<br />
            <br />
            DEFINE NUMBER SheetCount AS 'Enter the number of sheets'<br />
            BETWEEN 10 AND 1000<br />
            DEFAULT 15<br />
            ENDDEFINE<br />
            <br />
            DEFINE NUMBER ClaimCount AS 'Number of claims'<br />
            BETWEEN 0 AND 1000<br />
            DEFAULT 0<br />
            ENDDEFINE<br />
            <br />
            DEFINE BOOLEAN ContainsDependentClaims AS 'Does this contain dependent claims?'<br />
            DEFAULT TRUE<br />
            ENDDEFINE<br />
            <br />
            COMPUTE FEE BasicNationalFee<br />
            YIELD 320 IF EntityType EQ NormalEntity<br />
            YIELD 128 IF EntityType EQ SmallEntity<br />
            YIELD 64 IF EntityType EQ MicroEntity<br />
            ENDCOMPUTE<br />
            <br />
            COMPUTE FEE SearchFee<br />
            CASE SituationType EQ PreparedIPEA AS<br />
            YIELD 0 IF EntityType EQ NormalEntity<br />
            YIELD 0 IF EntityType EQ SmallEntity<br />
            YIELD 0 IF EntityType EQ MicroEntity<br />
            ENDCASE<br />
            CASE SituationType EQ PaidAsISA AS<br />
            YIELD 140 IF EntityType EQ NormalEntity<br />
            YIELD 56 IF EntityType EQ SmallEntity<br />
            YIELD 28 IF EntityType EQ MicroEntity<br />
            ENDCASE<br />
            CASE SituationType EQ PreparedISA AS<br />
            YIELD 540 IF EntityType EQ NormalEntity<br />
            YIELD 216 IF EntityType EQ SmallEntity<br />
            YIELD 108 IF EntityType EQ MicroEntity<br />
            ENDCASE<br />
            YIELD 700 IF EntityType EQ NormalEntity<br />
            YIELD 280 IF EntityType EQ SmallEntity<br />
            YIELD 140 IF EntityType EQ MicroEntity<br />
            ENDCOMPUTE<br />
            <br />
            COMPUTE FEE ExaminationFee<br />
            CASE SituationType EQ PreparedIPEA AS<br />
            YIELD 0 IF EntityType EQ NormalEntity<br />
            YIELD 0 IF EntityType EQ SmallEntity<br />
            YIELD 0 IF EntityType EQ MicroEntity<br />
            ENDCASE<br />
            YIELD 800 IF EntityType EQ NormalEntity<br />
            YIELD 360 IF EntityType EQ SmallEntity<br />
            YIELD 160 IF EntityType EQ MicroEntity<br />
            ENDCOMPUTE<br />
            <br />
            COMPUTE FEE SheetFee<br />
            LET A AS 420<br/>
            LET B AS 420<br />
            LET C AS 420<br />
            YIELD ROUND(A*((SheetCount-100)/50)) IF SheetCount GT 100 AND EntityType EQ NormalEntity<br />
            YIELD ROUND(B*((SheetCount-100)/50)) IF SheetCount GT 100 AND EntityType EQ SmallEntity<br />
            YIELD ROUND(C*((SheetCount-100)/50)) IF SheetCount GT 100 AND EntityType EQ MicroEntity<br />
            ENDCOMPUTE<br />
            <br />
            COMPUTE FEE ClaimFee<br />
            YIELD (480*ClaimCount) IF ClaimCount GT 3 AND EntityType EQ NormalEntity<br />
            YIELD (192*ClaimCount) IF ClaimCount GT 3 AND EntityType EQ SmallEntity<br />
            YIELD (96*ClaimCount) IF ClaimCount GT 3 AND EntityType EQ MicroEntity<br />
            ENDCOMPUTE
        </p>
    </div>
</div>
